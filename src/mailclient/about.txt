********************************************************
**                    E-MFetcher                      **
********************************************************
https://github.com/YReshetko/GolangLearning/tree/master/src/mailclient
********************************************************
Автор: Решетько Юрий
email: yrashetska@gmail.com
Идея: Ничипоренко Дмитрий
email: ???
********************************************************
**               Описание приложения                  **
********************************************************
Приложение для постоянного мониторинга почты и скачивания 
писем по определенному паттерну.
Кроме парсинга текста письма, скачивается прикрепленный файл.
Оба, шаблон письма и шаблон имени прикрепленного файла, 
должны совпасть, чтобы приложение выполнило свою функцию.

Данные о письме сохраняются в MongoDB
Файл в локальное хранилище
********************************************************
**             Конфигурация приложения                **
********************************************************
Файл конфигурации: configuration.json
---------------------------------------------------------
- hostConfiguration         Конфигурация доступа приложения к почтовому серверу (IMAP)
        - imapHost              Адрес IMAP хоста
        - imapPort              Порт IMAP хоста
        - clientEmail           Почтовый адрес пользователя
        - clientPassword        Пароль пользователя от почты
---------------------------------------------------------
- emailStructure            Ожидаемая структура письма, который требует процессинга
        - expectedSender        Имя отправителя письма (набор символов до символа @ в почтовом адресе)
        - fileNameRegExp        Паттерн имени прикрепленного файла, группы символолв должны последовательно означать:
                                    - День записи
                                    - Месяц записи
                                    - Год записи
                                    - Час начала записи
                                    - Минута начала записи
                                    - Секунда начала записи
	    - whoCallsRegExp        Паттерн для текста письма, определяющий кто звонил
	    - inputNumberRegExp     Паттерн для текста письма, определяющий набранный номер
	    - participantRegExp     Паттерн для текста письма, определяющий участника беседы
---------------------------------------------------------
- storageConfiguration      Конфигурация хранилища данных
        - dbHost                IP адрес базы данных
	    - dbPort                Порт базы данных
        - dbName                Имя базы данных
        - collectionName        Имя коллекции в базе, в которой хранятся данные
        - localStorageBasePath  Путь на диске, где должны хранить прикрепленные файлы
---------------------------------------------------------
- schedulerConfiguration    Конфигурация расписания запуска сбора писем 
        - Every                 Число промежутков времени через которое нужно запускать сбор данных
        - Term                  Строковое значение промежутка времени. Доступные константы:
                                    - Second секунды
                                    - Minute минуты
                                    - Hour часы
                                    - Day дни (только этот параметр работает совместно с "At")
        - At                    Время, например "18:35", в которое необходимо запустить сбор данных. Работает только с Term=Day
Примеры расписаний:
    Every=20, Term=Minute, At=""    - запуск сбора данных каждые 20 минут
    Every=1, Term=Hour, At=""       - запуск сбора данных каждый час
    Every=1, Term=Day, At="23:00"   - запуск сбора данных каждый день в 23:00
    Every=3, Term=Day, At="01:00"   - запуск сбора данных каждые 3 дня в 01:00
